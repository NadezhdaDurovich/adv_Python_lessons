# Урок 7. "Файлы и файловая система"  Все формулы перенесены в отдельнын модули в пакете 'moduls_from_seventh_seminar'

# Задание №1.
# Напишите функцию, которая заполняет файл (добавляет в конец) случайными парами чисел. Первое число int, второе - float разделены вертикальной чертой. 
# Минимальное число - -1000, максимальное - +1000. Количество строк и имя файла передаются как аргументы функции.
from moduls_from_seventh_seminar import filling_file_with_numbers

rows = 10
filling_file_with_numbers.generate_number_into_file (rows, 'new_data.txt')

# Задание №2.

# Напишите функцию, которая генерирует псевдоимена. Имя должно начинаться с заглавной буквы, cостоять из 4-7 букв, среди которых 
# бязательно должны быть гласные. Полученные имена сохраните в файл.

from moduls_from_seventh_seminar import generating_pseudo_names

count = 15   
generating_pseudo_names.generate_names_file('data.txt', count)



# Задание №3.

# Напишите функцию, которая открывает на чтение созданные в прошлых задачах файлы с числами и именами.
# Перемножьте пары чисел. В новый файл сохраните имя и произведение:
#     - если результат умножения отрицательный, сохраните имя строчными буквами и произведение по модулю;
#     - если результат умножения положительный, сохраните имя прописными буквами и произведени, округлённое до целого.
# В результирующем файле должно быть столько же строк, сколько в более длинном файле. 
# При достижении конца более короткого файла, озвращайтесь в его начало.


from moduls_from_seventh_seminar import creating_file_from_existing_ones as cffeo

cffeo.process_files('new_data.txt', 'data.txt', 'res.txt')

# Задание №4

# Создайте функцию, которая создаёт файлы с указанным расширением. Функция принимает следующие параметры:
# расширение, минимальная длина случайно сгенерированного имени (по умолчанию 6), 
# максимальная длина случайно сгенерированного имени (по умолчанию 30), минимальное число случайных байт, записанных в файл (по умолчанию 256),
# максимальное число случайных байт, записанных в файл (по умолчанию 4096), количество файлов (по умолчанию 42),
# Имя файла и его размер должны быть в рамках переданного диапазона.

from moduls_from_seventh_seminar import creating_files_with_specific_extension as cfwse

cfwse.generate_files('rnd', 'files')

# Задание №5.
# Доработаем предыдущую задачу. 
# Создайте новую функцию, которая генерирует файлы с разными расширениями. Расширения и количество файлов функция принимает в качестве параметров. 
# Количество переданных расширений может быть любым.Количество файлов для каждого расширения различно. 
# Внутри используйте вызов функции из прошлой задачи.



# Задание №6.
# Дорабатываем функции из предыдущих задач. 
# Генерируйте файлы в указанную директорию — отдельный параметр функции. --> DONE
# Отсутствие/наличие директории не должно вызывать ошибок в работе функции (добавьте проверки).--> DONE 
# Существующие файлы не должны удаляться/изменяться в случае совпадения имён--> DONE

d = {
        'doc': 5,
        'jpg': 10,
        'png': 23,
        'txt': 15
    }
cfwse.generate_with_dictionary(d)

# Задание №7
# Создайте функцию для сортировки файлов по директориям: видео, изображения, текст и т.п. 
# Каждая группа включает файлы с несколькими расширениями. 
# В исходной папке должны остаться только те файлы, которые не подошли для сортировки.

from moduls_from_seventh_seminar import sorting_files_by_directories

sorting_files_by_directories.sort_files('files')